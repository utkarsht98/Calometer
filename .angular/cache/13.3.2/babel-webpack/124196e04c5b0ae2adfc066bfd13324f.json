{"ast":null,"code":"import { environment as env } from '../../environments/environment';\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(client) {\n      this.client = client;\n      this.headers = new HttpHeaders({\n        'content-type': 'application/json'\n      });\n    }\n\n    validateCredentials(userLogin) {\n      return this.client.post(env.apiAddress + '/getUser', JSON.stringify(userLogin), {\n        headers: this.headers,\n        observe: 'response'\n      }).pipe(catchError(error => this.handleError(error)));\n    }\n\n    handleError(err) {\n      if (err.status === 404) {\n        return err.error;\n      }\n\n      return throwError(\"Something went wrong. Please try again!!)\");\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}